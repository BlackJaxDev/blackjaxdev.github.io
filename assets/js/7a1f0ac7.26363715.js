"use strict";(self.webpackChunkblackjaxdev_github_io=self.webpackChunkblackjaxdev_github_io||[]).push([[6773],{3457:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>r,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var t=o(5893),s=o(1151);const i={sidebar_position:4},a="Always Sync Bounding Boxes",l={id:"Jax VRC Tools/Menu Items/Global Settings/Always Sync Bounding Boxes",title:"Always Sync Bounding Boxes",description:"When enabled, bounding boxes and the preferred root bone will always be set without asking for confirmation. This check will only be run when the warnings section is open.",source:"@site/docs/Jax VRC Tools/Menu Items/Global Settings/Always Sync Bounding Boxes.md",sourceDirName:"Jax VRC Tools/Menu Items/Global Settings",slug:"/Jax VRC Tools/Menu Items/Global Settings/Always Sync Bounding Boxes",permalink:"/docs/Jax VRC Tools/Menu Items/Global Settings/Always Sync Bounding Boxes",draft:!1,unlisted:!1,editUrl:"https://github.com/blackjaxdev/blackjaxdev.github.io/tree/main/docs/Jax VRC Tools/Menu Items/Global Settings/Always Sync Bounding Boxes.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Always Sync Light Probe Anchors",permalink:"/docs/Jax VRC Tools/Menu Items/Global Settings/Always Sync Light Probe Anchors"},next:{title:"Always Fix Menu Icon Sizes",permalink:"/docs/Jax VRC Tools/Menu Items/Global Settings/Always Fix Menu Icon Sizes"}},r={},c=[];function u(e){const n={h1:"h1",p:"p",...(0,s.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"always-sync-bounding-boxes",children:"Always Sync Bounding Boxes"}),"\n",(0,t.jsx)(n.p,{children:"When enabled, bounding boxes and the preferred root bone will always be set without asking for confirmation. This check will only be run when the warnings section is open."})]})}function d(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},1151:(e,n,o)=>{o.d(n,{Z:()=>l,a:()=>a});var t=o(7294);const s={},i=t.createContext(s);function a(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);